/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdFi.OdsApi.Sdk.v54.Client.OpenAPIDateConverter;

namespace EdFi.OdsApi.Sdk.v54.Models.All
{
    /// <summary>
    /// EdFiBudget
    /// </summary>
    [DataContract(Name = "edFi_budget")]
    public partial class EdFiBudget : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiBudget" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EdFiBudget() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiBudget" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="asOfDate">The date of the reported budget element. (required).</param>
        /// <param name="accountReference">accountReference (required).</param>
        /// <param name="amount">Amount budgeted for the account for this fiscal year. (required).</param>
        /// <param name="etag">A unique system-generated value that identifies the version of the resource..</param>
        /// <param name="ext">Extensions to the Budget entity..</param>
        public EdFiBudget(string id = default, DateOnly asOfDate = default, EdFiAccountReference accountReference = default, double amount = default, string etag = default, Object ext = default)
        {
            this.AsOfDate = asOfDate;
            // to ensure "accountReference" is required (not null)
            if (accountReference == null)
            {
                throw new ArgumentNullException("accountReference is a required property for EdFiBudget and cannot be null");
            }
            this.AccountReference = accountReference;
            this.Amount = amount;
            this.Id = id;
            this.Etag = etag;
            this.Ext = ext;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// The date of the reported budget element.
        /// </summary>
        /// <value>The date of the reported budget element.</value>
        [DataMember(Name = "asOfDate", IsRequired = true, EmitDefaultValue = true)]
        public DateOnly AsOfDate { get; set; }

        /// <summary>
        /// Gets or Sets AccountReference
        /// </summary>
        [DataMember(Name = "accountReference", IsRequired = true, EmitDefaultValue = true)]
        public EdFiAccountReference AccountReference { get; set; }

        /// <summary>
        /// Amount budgeted for the account for this fiscal year.
        /// </summary>
        /// <value>Amount budgeted for the account for this fiscal year.</value>
        [DataMember(Name = "amount", IsRequired = true, EmitDefaultValue = true)]
        public double Amount { get; set; }

        /// <summary>
        /// A unique system-generated value that identifies the version of the resource.
        /// </summary>
        /// <value>A unique system-generated value that identifies the version of the resource.</value>
        [DataMember(Name = "_etag", EmitDefaultValue = false)]
        public string Etag { get; set; }

        /// <summary>
        /// Extensions to the Budget entity.
        /// </summary>
        /// <value>Extensions to the Budget entity.</value>
        [DataMember(Name = "_ext", EmitDefaultValue = false)]
        public Object Ext { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiBudget {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AsOfDate: ").Append(AsOfDate).Append("\n");
            sb.Append("  AccountReference: ").Append(AccountReference).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  Etag: ").Append(Etag).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
